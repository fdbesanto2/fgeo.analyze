% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abundance.R
\name{abundance}
\alias{abundance}
\alias{basal_area}
\title{Abundance and basal area, optionally by groups.}
\usage{
abundance(x)

basal_area(x)
}
\arguments{
\item{x}{A dataframe. `basal_area()` requires a column named `dbh` (case
insensitive).}
}
\description{
`abundance()` counts woods by counting the number of rows in a dataset,
optionally by groups created with [group_by()] (similar to [dplyr::n()]). It
warns if it detects duplicated values of treeid. `basal_area()` sums the
basal area of all woods in a dataset, optionally by groups created with
[group_by()]. It warns if it detects duplicated values of stemid. It does not
convert units (but see examples). Both `abundance()` and
`basal_area()` warn if they detect multiple censusid and multiple plots.
}
\details{
You may want to calculate the abundance or basal area for a specific subset
of data (e.g. "alive" stems or stems which `dbh` is within some range).
Subsetting data is not the job of these functions. Instead see [subset()],
[dplyr::filter()], or `[`.
}
\examples{
library(dplyr)
library(fgeo.tool)

# abundance() -------------------------------------------------------------

# Similar to dplyr::n()
abundance(data.frame(1))

vft <- tibble::tribble(
  ~PlotName, ~CensusID, ~TreeID, ~StemID, ~DBH,
        "p",         1,     "1",   "1.1",   10,
        "q",         2,     "1",   "1.1",   10
)

# * Warns if it detects multiple values of censusid or plotname
# * Also warns if it detects duplicated values of treeid
abundance(vft)

# You should probably work with a single plotname.
# Yet your data may have multiple stems per treeid and even multiple measures
# per stemid (when trees have buttressess).
vft2 <- tibble::tribble(
  ~CensusID, ~TreeID, ~StemID, ~DBH, ~HOM,
          1,     "1",   "1.1",   88,  130,
          1,     "1",   "1.1",   10,  160,
          1,     "2",   "2.1",   20,  130,
          1,     "2",   "2.2",   30,  130,
)

# You should count only the main stem of each tree
(main_stem <- pick_main_stem(vft2))
abundance(main_stem)

vft3 <- tibble::tribble(
  ~CensusID, ~TreeID, ~StemID, ~DBH, ~HOM,
          1,     "1",   "1.1",   20,  130,
          1,     "1",   "1.2",   10,  160,  # Main stem
          2,     "1",   "1.1",   12,  130,
          2,     "1",   "1.2",   22,  130   # Main stem
)

# You can compute by groups
by_census <- group_by(vft3, CensusID)
(main_stems_by_census <- pick_main_stem(by_census))
abundance(main_stems_by_census)

# basal_area() ------------------------------------------------------------

# Data must have a column named dbh (case insensitive)
basal_area(data.frame(dbh = 1))

# * Warns if it detects multiple values of censusid or plotname
# * Also warns if it detects duplicated values of stemid
basal_area(vft)

# First you may pick the main stemid of each stem
(main_stemids <- pick_main_stemid(vft2))
basal_area(main_stemids)

# You can compute by groups
basal_area(by_census)

\dontrun{
# Convert units
missing_measurements <- !requireNamespace("measurements", quietly = TRUE)
if (missing_measurements) stop("Please run `install.packages('measurements')`")
ba <- basal_area(by_census)
ba$basal_area_he <- measurements::conv_unit(
  ba$basal_area,
  from = "mm2",
  to = "hectare"
)
ba
}
}
\seealso{
[dplyr::n()], [group_by()].

Other functions for abundance and basal area: \code{\link{abundance_byyr}}
}
\concept{functions for abundance and basal area}
